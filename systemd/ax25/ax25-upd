#!/bin/bash
#
# ax25-upd for use with systemd & direwolf
# Ax25, rose, & mkiss - are pre-loaded via /etc/modules or built into kernel
#
# Uncomment this statement for debug echos
DEBUG=1

SBINDIR=/usr/local/sbin
BINDIR=/usr/local/bin
UDRCII=false

# portname set in /etc/ax25/axports
PORTNAME_1="udr0"
PORTNAME_2="udr1"
SERIALPORT_DIREWOLF="/tmp/kisstnc"
IPADDR_AX0="192.168.255.2"
IPADDR_AX1="192.168.255.3"

firmware_prodfile="/sys/firmware/devicetree/base/hat/product"
firmware_prod_idfile="/sys/firmware/devicetree/base/hat/product_id"
firmware_vendorfile="/sys/firmware/devicetree/base/hat/vendor"

PROD_ID_NAMES=("INVALID" "INVALID" "UDRC" "UDRC II" "DRAWS" "1WSpot")
NWDIG_VENDOR_NAME="NW Digital Radio"

function dbgecho { if [ ! -z "$DEBUG" ] ; then echo "$*"; fi }

# ===== function EEPROM id_check

# Return code:
# 0 = no EEPROM or no device tree found
# 1 = HAT found but not a UDRC
# 2 = UDRC
# 3 = UDRC II
# 4 = DRAWS
# 5 = 1WSpot

function id_check() {
# Initialize to EEPROM not found
udrc_prod_id=0

# Does firmware file exist
if [ -f $firmware_prodfile ] ; then
   # Read product file
   UDRC_PROD="$(tr -d '\0' < $firmware_prodfile)"
   # Read vendor file
   FIRM_VENDOR="$(tr -d '\0' < $firmware_vendorfile)"
   # Read product id file
   UDRC_ID="$(tr -d '\0' < $firmware_prod_idfile)"
   #get last character in product id file
   UDRC_ID=${UDRC_ID: -1}

   dbgecho "UDRC_PROD: $UDRC_PROD, ID: $UDRC_ID"

   if [[ "$FIRM_VENDOR" == "$NWDIG_VENDOR_NAME" ]] ; then
      case $UDRC_PROD in
         "Universal Digital Radio Controller")
            udrc_prod_id=2
         ;;
         "Universal Digital Radio Controller II")
            udrc_prod_id=3
         ;;
         "Digital Radio Amateur Work Station")
            udrc_prod_id=4
         ;;
         "1WSpot")
            udrc_prod_id=5
         ;;
         *)
            echo "Found something but not a UDRC: $UDRC_PROD"
            udrc_prod_id=1
         ;;
      esac
   else

      dbgecho "Probably not a NW Digital Radio product: $FIRM_VENDOR"
      udrc_prod_id=1
   fi

   if [ udrc_prod_id != 0 ] && [ udrc_prod_id != 1 ] ; then
      if (( UDRC_ID == udrc_prod_id )) ; then
         dbgecho "Product ID match: $udrc_prod_id"
      else
         echo "Product ID MISMATCH $UDRC_ID : $udrc_prod_id"
         udrc_prod_id=1
      fi
   fi
   dbgecho "Found HAT for ${PROD_ID_NAMES[$UDRC_ID]} with product ID: $UDRC_ID"
else
   # RPi HAT ID EEPROM may not have been programmed in engineering samples
   # or there is no RPi HAT installed.
   udrc_prod_id=0
fi

return $udrc_prod_id
}

# ===== main =====

echo "ax25-upd: Start Port ${PORTNAME_1} with device ${SERIALPORT_DIREWOLF}"

if [ -L $SERIALPORT_DIREWOLF ] ; then
    echo "Direwolf serial port ready"
else
    echo "Direwolf serial port NOT FOUND"
    exit 1
fi

# Check which UDRC product is found
id_check
id_check_ret="$?"

# Initialize kissattach return code
kissattach_ret=-1

case $id_check_ret in
0|1)
   echo "No UDRC found, exiting"
   exit 1
;;
2)
   echo "Original UDRC is installed."
# use port 1 with mkiss
   pseudoterm=$($SBINDIR/mkiss $SERIALPORT_DIREWOLF /dev/ptmx none | tail -1)
   echo "using mkiss with UDRC and pseudo term=$pseudoterm on port 1"
   $SBINDIR/kissattach  ${pseudoterm} ${PORTNAME_1} ${IPADDR_AX0} >/tmp/ax25-config.tmp
   kissattach_ret=$?
   dbgecho "kissattach return: $?"
   /etc/ax25/ax25dev-parms ax0
;;
3|4)
   echo "UDRC II or DRAWS installed"
# use port 2 with mkiss
   pseudoterm=$($SBINDIR/mkiss $SERIALPORT_DIREWOLF /dev/ptmx /dev/ptmx | tail -1)
   echo "$pseudoterm" > /tmp/ax25-config.tmp
   pseudoterm_1=$(echo $pseudoterm | cut -d ' ' -f1)
   pseudoterm_2=$(echo $pseudoterm | cut -d ' ' -f2)
   echo "using mkiss with UDRC II and pseudo term_1: $pseudoterm_1 pseudo term_2: $pseudoterm_2"
   $SBINDIR/kissattach  ${pseudoterm_1} ${PORTNAME_1} ${IPADDR_AX0} >/tmp/ax25-config_1.tmp
   $SBINDIR/kissattach  ${pseudoterm_2} ${PORTNAME_2} ${IPADDR_AX1} >/tmp/ax25-config_2.tmp
   kissattach_ret=$?
   dbgecho "kissattach return: $?"
   /etc/ax25/ax25dev-parms ax0
   /etc/ax25/ax25dev-parms ax1
   echo " Port ${PORTNAME_1} attached to ax0"
   echo " Port ${PORTNAME_2} attached to ax1"
;;
5)
   echo "One Watt Spot installed"
# use port 1 with mkiss
   pseudoterm=$($SBINDIR/mkiss $SERIALPORT_DIREWOLF /dev/ptmx none | tail -1)
   echo "using mkiss with UDRC and pseudo term=$pseudoterm on port 1"
   $SBINDIR/kissattach  ${pseudoterm} ${PORTNAME_1} ${IPADDR_AX0} >/tmp/ax25-config.tmp
   kissattach_ret=$?
   dbgecho "kissattach return: $?"
   /etc/ax25/ax25dev-parms ax0
;;
*)
   echo "Invalid udrc id ... exiting"
   exit 1
;;
esac

# configure netrom
# Needs a callsign
# source /home/pi/n7nix/systemd/ax25/nr-up.sh

# AX25-upd (End)
echo
echo "ax25-upd script finished"
exit 0
